{"version":3,"file":"jflow-vue2-plugin.es.min.js","sources":["../components/StackMixin.js","../components/JFlow.js","../node_modules/object-diff/index.js","../components/JFlowInstance.js","../components/JFlowLink.js","../components/JFlowGroup.js","../components/JFlowTextGroup.js","../components/JFlowLinkGroup.js","../index.js"],"sourcesContent":["export default {\n    provide(){\n        return {\n            addToStack: this.addToStack,\n            // addToLinkStack: this.addToLinkStack,\n            removeFromStack: this.removeFromStack,\n            // removeFromLinkStack: this.removeFromLinkStack,\n        }\n    },\n    data() {\n        return {\n            stack: [], // 主要是为了连线\n        }\n    },\n    methods: {\n        addToStack(instance, source) {\n            this._jflowInstance.addToStack(instance);\n            if(source) {\n                instance._jflow.setRenderNodeBySource(source, instance)\n            }\n        },\n        // addToLinkStack(link, sourceFrom, sourceTo) {\n        //     this._jflowInstance.addToLinkStack(link);\n        //     if(sourceFrom && sourceTo) {\n        //         link._jflow.addLinkNodeBySource(sourceFrom, sourceTo, link);\n        //     }\n        // },\n        removeFromStack(instance) {\n            this._jflowInstance.removeFromStack(instance);\n        },\n        // removeFromLinkStack(link, sourceFrom, sourceTo) {\n        //     this._jflowInstance.removeFromLinkStack(link);\n        //     if(sourceFrom && sourceTo) {\n        //         link._jflow.removeLinkNodeBySource(sourceFrom, sourceTo, link);\n        //     }\n        // },\n        onStackChangeHandler() {\n            this._jflowInstance.recalculate();\n            this._jflowInstance.reflow();\n        }\n    }\n}","import JFlow from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\n/**\n * typs#slot 中的属性 \n * @typedef {Object} j-jflow-Node\n * @property {string}       type   - 布局节点类型\n * @property {Object}       configs  - 源数据\n * @property {LayoutNode}   meta   - 布局节点\n */\n/**\n * JFlow {@link JFlow} 的 vue 封装 \n * @module j-jflow\n * @property {JFlow~JFlowConfigs} configs - 传给 JFlow 的配置\n * @property {Boolean} loading            - 初始渲染状态，支持 sync\n */\nexport default {\n    mixins: [StackMixin],\n    provide(){\n        return {\n            renderJFlow: this.renderJFlow,\n            getJFlow: this.getInstance,\n            addToLinkStack: this.addToLinkStack,\n            removeFromLinkStack: this.removeFromLinkStack,\n        }\n    },\n    props: {\n        configs: {\n            type: Object,\n            default: function () {\n                return {};\n            },\n        },\n        loading: Boolean,\n        genVueComponentKey: {\n            type: Function,\n        }\n    },\n    data() {\n        return {\n            // nodes: [],\n            // links: [],\n            renderNodes: [],\n            renderLinks: [],\n        }\n    },\n    render: function (createElement) {\n        if(!this.renderNodes.length) {\n            return createElement('div', this.$slots.default);\n        } else {\n            const vnodes = this.renderNodes.map(({ type, source, layoutNode }) => {\n                if(!this.$scopedSlots[type]) {\n                    if(this.$scopedSlots['jflowcommon']){\n                        type = 'jflowcommon';\n                    } else {\n                        return null;\n                    }\n                }\n                if(layoutNode.__vnode__) {\n                    return layoutNode.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ source, layoutNode });\n                if(this.genVueComponentKey) {\n                    vnode.key = this.genVueComponentKey(source);\n                }\n                \n                layoutNode.__vnode__ = vnode;\n                return vnode;\n            }).filter(n => !!n);\n            const vlinks = this.renderLinks.map(meta => {\n                let type = meta.type || 'plainlink'\n                if(!this.$scopedSlots[type]) {\n                    return null;\n                }\n                if(meta.__vnode__) {\n                    return meta.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ configs: meta });\n                if(this.genVueComponentKey) {\n                    const k1 = this.genVueComponentKey(meta.from.source);\n                    const k2 = this.genVueComponentKey(meta.to.source);\n                    const k3 = meta.part;\n                    vnode.key = `${k1}-${k2}-${k3}`\n                }\n                meta.__vnode__ = vnode;\n                return vnode\n            })\n\n            return createElement('div', [...vnodes, ...vlinks]);\n        }\n        \n    },\n    created() {\n        this._jflowInstance = new JFlow(this.configs);\n        this.$emit('update:loading', true)\n        this.genNodeLinkMeta();\n        this.syncNodeLink();\n    },\n    mounted() {\n        this.mountJFlow();\n    },\n    beforeDestroy() {\n        this._jflowInstance?.destroy();\n    },\n    methods: {\n        mountJFlow() {\n            this._jflowInstance.$mount(this.$el);\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.$emit('update:loading', false)\n        },\n        genNodeLinkMeta() {\n            /** \n            * @member {j-jflow-Node[]} nodes\n            */\n            this.nodes = this._jflowInstance._layout.flowStack.map(meta => {\n                const { type, layoutNode, source } = meta;\n                const map = this._jflowInstance.source_Layout_Render_NodeMap;\n                let obj;\n                if(map.has(source)) {\n                    obj = map.get(source);\n                } else {\n                    obj = map.set(source);\n                }\n                obj.layoutNode = layoutNode;\n                return meta;\n            });\n            /** \n            * @member {Layout~LinkMeta[]} links\n            */\n            this.links = this._jflowInstance._layout.flowLinkStack.slice();\n        },\n        syncNodeLink() {\n            this.renderNodes = this.nodes.slice();\n            this.renderLinks = this.links.slice();\n        },\n        /**\n         * 绘制之前，vnode渲染之后\n         * @name j-jflow~preCallback\n         * @function\n         */\n        /**\n         * 重排\n         * @param {j-jflow~preCallback} preCallback - JFlow 绘制之前，vnode渲染之后\n         */\n        reflow(preCallback, afterCallback) {\n            this.genNodeLinkMeta();\n            this.syncNodeLink();\n            this.$nextTick(() => {\n                if(preCallback) {\n                    preCallback();\n                }\n                this._jflowInstance.recalculate();\n                this._jflowInstance.scheduleRender(() => {\n                    if(afterCallback) {\n                        afterCallback();\n                    }\n                });\n                \n            })\n        },\n        /**\n         * 获取单签 JFlow 实例\n         * @return {Jflow} - JFlow对象\n         */\n        getInstance() {\n            return this._jflowInstance;\n        },\n        /**\n         * 手动触发绘制\n         */\n        renderJFlow() {\n            if(this.__renderInSchedule__) {\n                return;\n            }\n            this.__renderInSchedule__ = true;\n            this.$nextTick(() => {\n                this._jflowInstance._render();\n                this.__renderInSchedule__ = false;\n            });\n        },\n        addToLinkStack(link, sourceFrom, sourceTo) {\n            this._jflowInstance.addToLinkStack(link);\n            if(sourceFrom && sourceTo) {\n                link._jflow.addLinkNodeBySource(sourceFrom, sourceTo, link);\n            }\n        },\n        removeFromLinkStack(link, sourceFrom, sourceTo) {\n            this._jflowInstance.removeFromLinkStack(link);\n            if(sourceFrom && sourceTo) {\n                link._jflow.removeLinkNodeBySource(sourceFrom, sourceTo, link);\n            }\n        },\n    }\n}","'use strict';\n\nstrict.custom = custom;\n\nmodule.exports = strict;\n\nfunction strict(){\n\treturn diff(null, [].slice.call(arguments, 0));\n}\n\nfunction custom( opts ){\n\treturn diff(opts, [].slice.call(arguments, 1));\n}\n\nfunction diff( opts, subjects ){\n\tvar length = subjects.length;\n\tvar ref = subjects[0];\n\tvar diff = {};\n\tvar equal = opts && opts.equal || isStrictEqual;\n\tvar c;\n\tvar keys;\n\tvar keysLength;\n\tvar key;\n\tvar u;\n\n\tfor (var i = 1;i < length;i++) {\n\t\tc = subjects[i];\n\t\tkeys = Object.keys(c);\n\t\tkeysLength = keys.length;\n\n\t\tfor (u = 0;u < keysLength;u++) {\n\t\t\tkey = keys[u];\n\n\t\t\tif (!equal(c[key], ref[key]))\n\t\t\t\tdiff[key] = c[key];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\nfunction isStrictEqual( a, b ){\n\treturn a === b;\n}\n","import * as JFlowInstance from '@joskii/jflow-core';\nimport diff from 'object-diff';\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        inject: ['addToStack', 'removeFromStack'],\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                // console.log(val, JSON.stringify(val) === JSON.stringify(oldVal), )\n                const diffed = diff(val, oldVal);\n                if(Object.keys(diffed).length === 0){\n                    return;\n                }\n                //\n                // const reflowKeys = Object.keys(diffed).filter(k => {\n                //     const lk = k.toLowerCase();\n                //     return !(lk.endsWith('color') || k.endsWith('style'));\n                // });\n                this._jflowInstance.setConfig(val);\n                // console.log('recalculateUp')\n                // this._jflowInstance.recalculateUp();\n                // console.log(reflowKeys.length, val)\n                // if(reflowKeys.length) {\n                //     this._jflowInstance._belongs.recalculateUp();\n                // }\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        render: function (createElement) {\n            return null;\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            this.bindListeners();\n            this.addToStack(this._jflowInstance, this.source);\n        },\n        // updated() {\n        //     console.log('recalculateUp')\n\n        // },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromStack(this._jflowInstance);\n        },\n        methods: {\n            bindListeners() {\n                Object.keys(this.$listeners).map(event => {\n                    const func = this.$listeners[event];\n                    this._jflowInstance.addEventListener(event, func);\n                })\n            }\n        }\n    }\n}","import * as JFlowInstance from '@joskii/jflow-core';\n/**\n * JFlow {@link BaseLink} 的 vue 封装 \n * @module jflow-link\n * @property {BaseLink~Configs} configs - 传给 BseLink 的配置, from, to属性会被替换为jflowid对应的 Instance\n * @property {String} from - source\n * @property {String} to - source\n */\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        inject: [ 'addToLinkStack', 'removeFromLinkStack', 'getJFlow' ],\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            from: Object,\n            to: Object,\n        },\n        // watch: {\n        //     from() {\n        //         this.resetLink();\n        //     },\n        //     to() {\n        //         this.resetLink();\n        //     },\n        //     configs(val, oldVal) {\n        //         this.setConfig(val);\n        //     },\n        // },\n        render: function (createElement) {\n            return null;\n        },\n        created() {\n            const jflow = this.getJFlow();\n            const fromInstance = jflow.getRenderNodeBySource(this.from);\n            const toInstance = jflow.getRenderNodeBySource(this.to);\n            this.createInstance(fromInstance, toInstance);\n        },\n        mounted() {\n            this.unwatch = this.$watch(() => [this.from, this.to, this.configs], () => {\n                this.refreshConfig();\n            })\n        },\n        methods: {\n            createInstance(fromInstance, toInstance) {\n                if(fromInstance && toInstance) {\n                    this._jflowInstance = new builder({\n                        ...this.configs,\n                        from: fromInstance,\n                        to: toInstance,\n                    });\n                    this.bindListeners();\n                    this.addToLinkStack(this._jflowInstance, this.from, this.to);   \n                }\n            },\n            refreshConfig() {\n                const jflow = this.getJFlow();\n                const fromInstance = jflow.getRenderNodeBySource(this.from);\n                const toInstance = jflow.getRenderNodeBySource(this.to);\n                if(!this._jflowInstance) {\n                    this.createInstance(fromInstance, toInstance);\n                } else {\n                    this._jflowInstance.setConfig({\n                        ...this.configs,\n                        from: fromInstance,\n                        to: toInstance,\n                    });\n                }\n                \n            },\n            // setConfig(val) {\n            //     const conf = {};\n            //     Object.keys(val).forEach(k => {\n            //         if(k !=='from' && k !== 'to'){\n            //             conf[k] = val[k];\n            //         }\n            //     })\n            //     this._jflowInstance.setConfig(conf);\n            // },\n            // resetLink() {\n            //     const jflow = this.getJFlow();\n            //     const fromInstance = jflow.getRenderNodeBySource(this.from);\n            //     const toInstance = jflow.getRenderNodeBySource(this.to);\n            //     this._jflowInstance.from = fromInstance;\n            //     this._jflowInstance.to = toInstance;\n            // },\n            bindListeners() {\n                Object.keys(this.$listeners).map(event => {\n                    const func = this.$listeners[event];\n                    this._jflowInstance.addEventListener(event, func);\n                })\n            }\n        },\n        destroyed() {\n            this.unwatch();\n            if(this._jflowInstance) {\n                this.removeFromLinkStack(this._jflowInstance, this.from, this.to);\n            }\n        }\n    }\n}","import * as JFlowInstance from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        mixins: [StackMixin],\n        inject: {\n            addToBelongStack: {\n                from: 'addToStack',\n            },\n            removeFromBelongStack: {\n                from: 'removeFromStack',\n            },\n            renderJFlow: {\n                from: 'renderJFlow',\n            },\n        },\n        render: function (createElement) {\n            return createElement('jflow-group', this.$slots.default);\n        },\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                    return;\n                }\n                this._jflowInstance.setConfig(val);\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.addToBelongStack(this._jflowInstance, this.source);\n        },\n        mounted(){\n            this._jflowInstance.recalculate();\n        },\n        updated() {\n            this._jflowInstance.recalculateUp();\n        },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromBelongStack(this._jflowInstance);\n        },\n    }\n}","import { TextGroup } from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\n\nexport default {\n    mixins: [StackMixin],\n    inject: {\n        addToBelongStack: {\n            from: 'addToStack',\n        },\n        removeFromBelongStack: {\n            from: 'removeFromStack',\n        },\n        renderJFlow: {\n            from: 'renderJFlow',\n        },\n    },\n    data() {\n        return {\n            nodes: [],\n        }\n    },\n    props: {\n        configs: {\n            type: Object,\n            default: function () {\n                return {};\n            },\n        },\n        visible: {\n            type: Boolean,\n            default: true,\n        },\n        source: {\n            type: Object,\n        },\n        genVueComponentKey: {\n            type: Function,\n        }\n    },\n    watch: {\n        configs(val, oldVal) {\n            if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                return;\n            }\n            this._jflowInstance.setConfig(val);\n            // this._jflowInstance._jflow._render();\n        },\n        '$listeners' (val, oldVal) {\n            let news = [];\n            let deletes = [];\n            const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n            const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n            vnew.forEach((v) => {\n                const hnew = v.handler;\n                if(!vold.find((q) => q.handler === hnew)) {\n                    news.push(v);\n                }\n            });\n            vold.forEach((v) => {\n                const hold = v.handler;\n                if(!vnew.find((q) => q.handler === hold)) {\n                    deletes.push(v);\n                }\n            });\n\n            news.forEach((v) => {\n                this._jflowInstance.addEventListener(v.event, v.handler);\n            });\n            deletes.forEach((v) => {\n                this._jflowInstance.removeEventListener(v.event, v.handler);\n            });\n        },\n        visible(val) {\n            this._jflowInstance.visible = val;\n            // this._jflowInstance._belongs.recalculateUp();\n            // this._jflowInstance._jflow._render();\n        },\n        source(val) {\n            this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n        }\n    },\n    \n    created() {\n        this._jflowInstance = new TextGroup(this.configs);\n        this._jflowInstance.visible = this.visible;\n        Object.keys(this.$listeners).map(event => {\n            const func = this.$listeners[event].bind(this);\n            this._jflowInstance.addEventListener(event, func);\n        })\n        this.addToBelongStack(this._jflowInstance, this.source);\n        this.genTextElementMeta();\n    },\n    mounted(){\n        this._jflowInstance.recalculate();\n    },\n    updated() {\n        this._jflowInstance.recalculateUp();\n    },\n    destroyed() {\n        this._jflowInstance.destroy();\n        this.removeFromBelongStack(this._jflowInstance);\n    },\n    render: function (createElement) {\n        if(!this.nodes.length) { \n            return createElement('jflow-group', this.$slots.default);\n        } else {\n            const vnodes = this.nodes.map((textElement) => {\n                let { type, source } = textElement;\n                if(!this.$scopedSlots[type]) {\n                    if(this.$scopedSlots['jflowcommon']){\n                        type = 'jflowcommon';\n                    } else {\n                        return\n                    }\n                }\n                if(textElement.__vnode__) {\n                    return textElement.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ source, textElement });\n                if(this.genVueComponentKey) {\n                    vnode.key = this.genVueComponentKey(source);\n                }\n                \n                textElement.__vnode__ = vnode;\n                return vnode;\n            });\n            return createElement('div', vnodes);\n        }\n    },\n    methods: {\n        genTextElementMeta() {\n            this.nodes = this._jflowInstance._flattenTxtElem.filter(elem => elem.type !== 'text');\n        },\n        reflow() {\n            this._jflowInstance.refreshTextElements();\n            this.genTextElementMeta();\n            this.$nextTick(() => {\n                this._jflowInstance.refresh();\n            })\n        },\n    },\n}","import StackMixin from './StackMixin';\nexport default function (builder) {\n    return {\n        mixins: [StackMixin],\n        inject: {\n            addToBelongStack: {\n                from: 'addToStack',\n            },\n            removeFromBelongStack: {\n                from: 'removeFromStack',\n            },\n            renderJFlow: {\n                from: 'renderJFlow',\n            },\n        },\n        render: function (createElement) {\n            const vlinks = this.renderLinks.map(meta => {\n                let type = meta.type || 'plainlink'\n                if(!this.$scopedSlots[type]) {\n                    return null;\n                }\n                if(meta.__vnode__) {\n                    return meta.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ configs: meta });\n                if(this.genVueComponentKey) {\n                    const k1 = this.genVueComponentKey(meta.from.source);\n                    const k2 = this.genVueComponentKey(meta.to.source);\n                    const k3 = meta.part;\n                    vnode.key = `${k1}-${k2}-${k3}`\n                }\n                meta.__vnode__ = vnode;\n                return vnode\n            })\n            return createElement('jflow-group', [...this.$slots.default, ...vlinks]);\n        },\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        data() {\n            return {\n                renderLinks: []\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                \n                if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                    return;\n                }\n                this._jflowInstance.setConfig(val);\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.addToBelongStack(this._jflowInstance, this.source);\n            this.genLinks();\n        },\n        mounted(){\n            this._jflowInstance.recalculate();\n        },\n        updated() {\n            this._jflowInstance.recalculateUp();\n        },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromBelongStack(this._jflowInstance);\n        },\n        methods: {\n            genLinks() {\n                this.renderLinks = this._jflowInstance._layout.flowLinkStack.slice();\n            },\n        }\n    }\n}","// import JFlowComponent from './components/JFlow';\nimport JFlowComponent from './components/JFlow';\nimport JFlowInstance from './components/JFlowInstance';\nimport JFlowLink from './components/JFlowLink';\nimport JFlowGroup from './components/JFlowGroup';\nimport JFlowTextGroup from './components/JFlowTextGroup';\n\nconst JFLOW_NODES = [\n    /**\n     * JFlow {@link Point} 的 vue 封装 \n     * @module j-point\n     * @property {Point~PointConfigs} configs - 传给 Point 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Point',\n    /**\n     * JFlow {@link Rectangle} 的 vue 封装 \n     * @module j-rectangle\n     * @property {Rectangle~RectangleConfigs|GroupTemplate~GroupConfigs} configs - 传给 Rectangle 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Rectangle',\n    /**\n     * JFlow {@link Capsule} 的 vue 封装 \n     * @module j-capsule\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Capsule 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Capsule',\n    /**\n     * JFlow {@link Diamond} 的 vue 封装 \n     * @module j-diamond\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Diamond 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Diamond',\n    /**\n     * JFlow {@link Rhombus} 的 vue 封装 \n     * @module j-rhombus\n     * @property {(Rhombus~RhombusConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Diamond 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Rhombus',\n    /**\n     * JFlow {@link Text} 的 vue 封装 \n     * @module j-text\n     * @property {Text~TextConfigs} configs - 传给 Text 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Text',\n    /**\n     * JFlow {@link Icon} 的 vue 封装 \n     * @module j-icon\n     * @property {Icon~IconConfigs} configs - 传给 Icon 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Icon',\n\n    'ShadowDom',\n\n    'TextEditor',\n];\n/**\n * @typedef {BezierLink~Configs} j-bezier-link~Configs\n * @property {String} from   - 起始单元 jflowId\n * @property {String} to     - 终止单元 jflowId\n */\nconst JFLOW_LINKS = [\n    'Link',\n    'PolyLink',\n    \n    /**\n     * JFlow {@link BezierLink} 的 vue 封装 \n     * @module j-bezier-link\n     * @property {BezierLink~Configs} configs - 传给 BezierLink 的配置\n     */\n    'BezierLink'\n]\nconst JFLOW_GROUPS = [\n    /**\n     * JFlow {@link CapsuleGroup} 的 vue 封装 \n     * @module j-capsule-group\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 CapsuleGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'CapsuleGroup',\n    /**\n     * JFlow {@link CapsuleVerticalGroup} 的 vue 封装 \n     * @module j-capsule-vertical-group\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 CapsuleVerticalGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'CapsuleVerticalGroup',\n    /**\n     * JFlow {@link DiamondGroup} 的 vue 封装 \n     * @module j-diamond-group\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 DiamondGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'DiamondGroup',\n    /**\n     * JFlow {@link DiamondVerticalGroup} 的 vue 封装 \n     * @module j-diamond-vertical-group\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 DiamondVerticalGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'DiamondVerticalGroup',\n    /**\n     * JFlow {@link RhombusGroup} 的 vue 封装 \n     * @module j-rhombus-group\n     * @property {(Rhombus~RhombusConfigs|GroupTemplate~GroupConfigs)} configs - 传给 RhombusGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'RhombusGroup',\n\n    'PointGroup',\n\n    'ScrollGroup',\n]\n\nconst components = [\n    {\n        name: 'Jflow',\n        component: JFlowComponent,\n    },\n    {\n        /**\n         * JFlow {@link RectangleGroup} 的 vue 封装 \n         * @module j-group\n         * @property {RectangleGroup~RectangleGroupConfigs} configs - 传给 RectangleGroup 的配置\n         */\n        name: 'Group',\n        component: JFlowGroup('Group'),\n    }, \n    ...JFLOW_GROUPS.map(name => ({\n        name,\n        component: JFlowGroup(name)\n    })),\n    ...JFLOW_NODES.map(name => ({\n        name,\n        component: JFlowInstance(name)\n    })),\n    ...JFLOW_LINKS.map(name => ({\n        name,\n        component: JFlowLink(name)\n    })),\n    {\n        name: 'TextGroup',\n        component: JFlowTextGroup\n    }\n];\nconst componentPrefix = 'j';\ncustomElements.define('jflow-group', class extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({mode: 'open'});\n    }\n});\n/**\n * @module JFlowVuePlugin \n */\nexport const JFlowVuePlugin = {\n    /**\n     * 安装 JFlowVuePlugin\n     * @function\n     * @param {Vue} Vue - Vue\n     * @param {Object} options - Vue plugin 配置\n     * @param {string} options.prefix - 组件前缀，默认是 j\n     * @param {Object} options.custom - 自定义组件，形式为 { key: {@link:Instance} }\n     */\n    install: (Vue, options = {}) => {\n        let prefixToUse = componentPrefix;\n        if(options && options.prefix){\n            prefixToUse = options.prefix;\n        };\n        components.forEach(k => {\n            Vue.component(`${prefixToUse}${k.name}`, k.component);\n        });\n\n        if(options.customInstance) {\n            Object.keys(options.customInstance).forEach(name => {\n                Vue.component(`${prefixToUse}${name}`, JFlowInstance(options.customInstance[name]));\n            })\n        }\n        if(options.customGroups) {\n            Object.keys(options.customGroups).forEach(name => {\n                // console.log(`${prefixToUse}${name}` )\n                Vue.component(`${prefixToUse}${name}`, JFlowGroup(options.customGroups[name]));\n            })\n        }\n        if(options.customLink) {\n            Object.keys(options.customLink).forEach(name => {\n                // console.log(`${prefixToUse}${name}` )\n                Vue.component(`${prefixToUse}${name}`, JFlowLink(options.customLink[name]));\n            })\n        }\n    }\n}\n\n// export { * as JFlowInstance } from './components/JFlowInstance'; \nexport { default as JFlowLinkGroup } from './components/JFlowLinkGroup';\n"],"names":["StackMixin","provide","addToStack","this","removeFromStack","data","stack","methods","instance","source","_jflowInstance","_jflow","setRenderNodeBySource","onStackChangeHandler","recalculate","reflow","JFlowComponent","mixins","renderJFlow","getJFlow","getInstance","addToLinkStack","removeFromLinkStack","props","configs","type","Object","default","loading","Boolean","genVueComponentKey","Function","renderNodes","renderLinks","render","createElement","length","map","layoutNode","$scopedSlots","__vnode__","vnode","key","filter","n","meta","k1","from","k2","to","k3","part","$slots","created","JFlow","$emit","genNodeLinkMeta","syncNodeLink","mounted","mountJFlow","beforeDestroy","destroy","$mount","$el","keys","$listeners","event","func","bind","addEventListener","nodes","_layout","flowStack","source_Layout_Render_NodeMap","obj","has","get","set","links","flowLinkStack","slice","preCallback","afterCallback","$nextTick","scheduleRender","__renderInSchedule__","_render","link","sourceFrom","sourceTo","addLinkNodeBySource","removeLinkNodeBySource","strict","diff","call","arguments","opts","subjects","c","keysLength","u","ref","equal","isStrictEqual","i","a","b","custom","JFlowInstance","nameNode","builder","inject","visible","watch","val","oldVal","diffed","setConfig","news","deletes","vnew","e","handler","vold","forEach","v","hnew","find","q","push","hold","removeEventListener","bindListeners","destroyed","JFlowLink","jflow","fromInstance","getRenderNodeBySource","toInstance","createInstance","unwatch","$watch","refreshConfig","JFlowGroup","addToBelongStack","removeFromBelongStack","JSON","stringify","updated","recalculateUp","JFlowTextGroup","TextGroup","genTextElementMeta","textElement","_flattenTxtElem","elem","refreshTextElements","refresh","JFlowLinkGroup","vlinks","genLinks","components","name","component","customElements","define","HTMLElement","constructor","super","attachShadow","mode","JFlowVuePlugin","install","Vue","options","prefixToUse","prefix","k","customInstance","customGroups","customLink"],"mappings":"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"}