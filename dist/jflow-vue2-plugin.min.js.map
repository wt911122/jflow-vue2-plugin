{"version":3,"file":"jflow-vue2-plugin.min.js","sources":["../components/StackMixin.js","../components/JFlow.js","../node_modules/object-diff/index.js","../components/JFlowInstance.js","../components/JFlowLink.js","../components/JFlowGroup.js","../components/JFlowTextGroup.js","../index.js","../components/JFlowLinkGroup.js"],"sourcesContent":["export default {\n    provide(){\n        return {\n            addToStack: this.addToStack,\n            // addToLinkStack: this.addToLinkStack,\n            removeFromStack: this.removeFromStack,\n            // removeFromLinkStack: this.removeFromLinkStack,\n        }\n    },\n    data() {\n        return {\n            stack: [], // 主要是为了连线\n        }\n    },\n    methods: {\n        addToStack(instance, source) {\n            this._jflowInstance.addToStack(instance);\n            if(source) {\n                instance._jflow.setRenderNodeBySource(source, instance)\n            }\n        },\n        // addToLinkStack(link, sourceFrom, sourceTo) {\n        //     this._jflowInstance.addToLinkStack(link);\n        //     if(sourceFrom && sourceTo) {\n        //         link._jflow.addLinkNodeBySource(sourceFrom, sourceTo, link);\n        //     }\n        // },\n        removeFromStack(instance) {\n            this._jflowInstance.removeFromStack(instance);\n        },\n        // removeFromLinkStack(link, sourceFrom, sourceTo) {\n        //     this._jflowInstance.removeFromLinkStack(link);\n        //     if(sourceFrom && sourceTo) {\n        //         link._jflow.removeLinkNodeBySource(sourceFrom, sourceTo, link);\n        //     }\n        // },\n        onStackChangeHandler() {\n            this._jflowInstance.recalculate();\n            this._jflowInstance.reflow();\n        }\n    }\n}","import JFlow from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\n/**\n * typs#slot 中的属性 \n * @typedef {Object} j-jflow-Node\n * @property {string}       type   - 布局节点类型\n * @property {Object}       configs  - 源数据\n * @property {LayoutNode}   meta   - 布局节点\n */\n/**\n * JFlow {@link JFlow} 的 vue 封装 \n * @module j-jflow\n * @property {JFlow~JFlowConfigs} configs - 传给 JFlow 的配置\n * @property {Boolean} loading            - 初始渲染状态，支持 sync\n */\nexport default {\n    mixins: [StackMixin],\n    provide(){\n        return {\n            renderJFlow: this.renderJFlow,\n            getJFlow: this.getInstance,\n            addToLinkStack: this.addToLinkStack,\n            removeFromLinkStack: this.removeFromLinkStack,\n        }\n    },\n    props: {\n        configs: {\n            type: Object,\n            default: function () {\n                return {};\n            },\n        },\n        loading: Boolean,\n        genVueComponentKey: {\n            type: Function,\n        }\n    },\n    data() {\n        return {\n            // nodes: [],\n            // links: [],\n            renderNodes: [],\n            renderLinks: [],\n        }\n    },\n    render: function (createElement) {\n        if(!this.renderNodes.length) {\n            return createElement('div', this.$slots.default);\n        } else {\n            const vnodes = this.renderNodes.map(({ type, source, layoutNode }) => {\n                if(!this.$scopedSlots[type]) {\n                    if(this.$scopedSlots['jflowcommon']){\n                        type = 'jflowcommon';\n                    } else {\n                        return null;\n                    }\n                }\n                if(layoutNode.__vnode__) {\n                    return layoutNode.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ source, layoutNode });\n                if(this.genVueComponentKey) {\n                    vnode.key = this.genVueComponentKey(source);\n                }\n                \n                layoutNode.__vnode__ = vnode;\n                return vnode;\n            }).filter(n => !!n);\n            const vlinks = this.renderLinks.map(meta => {\n                let type = meta.type || 'plainlink'\n                if(!this.$scopedSlots[type]) {\n                    return null;\n                }\n                if(meta.__vnode__) {\n                    return meta.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ configs: meta });\n                if(this.genVueComponentKey) {\n                    const k1 = this.genVueComponentKey(meta.from.source);\n                    const k2 = this.genVueComponentKey(meta.to.source);\n                    const k3 = meta.part;\n                    vnode.key = `${k1}-${k2}-${k3}`\n                }\n                meta.__vnode__ = vnode;\n                return vnode\n            })\n\n            return createElement('div', [...vnodes, ...vlinks]);\n        }\n        \n    },\n    created() {\n        this._jflowInstance = new JFlow(this.configs);\n        this.$emit('update:loading', true)\n        this.genNodeLinkMeta();\n        this.syncNodeLink();\n    },\n    mounted() {\n        this.mountJFlow();\n    },\n    beforeDestroy() {\n        this._jflowInstance?.destroy();\n    },\n    methods: {\n        mountJFlow() {\n            this._jflowInstance.$mount(this.$el);\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.$emit('update:loading', false)\n        },\n        genNodeLinkMeta() {\n            /** \n            * @member {j-jflow-Node[]} nodes\n            */\n            this.nodes = this._jflowInstance._layout.flowStack.map(meta => {\n                const { type, layoutNode, source } = meta;\n                const map = this._jflowInstance.source_Layout_Render_NodeMap;\n                let obj;\n                if(map.has(source)) {\n                    obj = map.get(source);\n                } else {\n                    obj = map.set(source);\n                }\n                obj.layoutNode = layoutNode;\n                return meta;\n            });\n            /** \n            * @member {Layout~LinkMeta[]} links\n            */\n            this.links = this._jflowInstance._layout.flowLinkStack.slice();\n        },\n        syncNodeLink() {\n            this.renderNodes = this.nodes.slice();\n            this.renderLinks = this.links.slice();\n        },\n        /**\n         * 绘制之前，vnode渲染之后\n         * @name j-jflow~preCallback\n         * @function\n         */\n        /**\n         * 重排\n         * @param {j-jflow~preCallback} preCallback - JFlow 绘制之前，vnode渲染之后\n         */\n        reflow(preCallback, afterCallback) {\n            this.genNodeLinkMeta();\n            this.syncNodeLink();\n            this.$nextTick(() => {\n                if(preCallback) {\n                    preCallback();\n                }\n                this._jflowInstance.recalculate();\n                this._jflowInstance.scheduleRender(() => {\n                    if(afterCallback) {\n                        afterCallback();\n                    }\n                });\n                \n            })\n        },\n        /**\n         * 获取单签 JFlow 实例\n         * @return {Jflow} - JFlow对象\n         */\n        getInstance() {\n            return this._jflowInstance;\n        },\n        /**\n         * 手动触发绘制\n         */\n        renderJFlow() {\n            if(this.__renderInSchedule__) {\n                return;\n            }\n            this.__renderInSchedule__ = true;\n            this.$nextTick(() => {\n                this._jflowInstance._render();\n                this.__renderInSchedule__ = false;\n            });\n        },\n        addToLinkStack(link, sourceFrom, sourceTo) {\n            this._jflowInstance.addToLinkStack(link);\n            if(sourceFrom && sourceTo) {\n                link._jflow.addLinkNodeBySource(sourceFrom, sourceTo, link);\n            }\n        },\n        removeFromLinkStack(link, sourceFrom, sourceTo) {\n            this._jflowInstance.removeFromLinkStack(link);\n            if(sourceFrom && sourceTo) {\n                link._jflow.removeLinkNodeBySource(sourceFrom, sourceTo, link);\n            }\n        },\n    }\n}","'use strict';\n\nstrict.custom = custom;\n\nmodule.exports = strict;\n\nfunction strict(){\n\treturn diff(null, [].slice.call(arguments, 0));\n}\n\nfunction custom( opts ){\n\treturn diff(opts, [].slice.call(arguments, 1));\n}\n\nfunction diff( opts, subjects ){\n\tvar length = subjects.length;\n\tvar ref = subjects[0];\n\tvar diff = {};\n\tvar equal = opts && opts.equal || isStrictEqual;\n\tvar c;\n\tvar keys;\n\tvar keysLength;\n\tvar key;\n\tvar u;\n\n\tfor (var i = 1;i < length;i++) {\n\t\tc = subjects[i];\n\t\tkeys = Object.keys(c);\n\t\tkeysLength = keys.length;\n\n\t\tfor (u = 0;u < keysLength;u++) {\n\t\t\tkey = keys[u];\n\n\t\t\tif (!equal(c[key], ref[key]))\n\t\t\t\tdiff[key] = c[key];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\nfunction isStrictEqual( a, b ){\n\treturn a === b;\n}\n","import * as JFlowInstance from '@joskii/jflow-core';\nimport diff from 'object-diff';\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        inject: ['addToStack', 'removeFromStack'],\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                // console.log(val, JSON.stringify(val) === JSON.stringify(oldVal), )\n                const diffed = diff(val, oldVal);\n                if(Object.keys(diffed).length === 0){\n                    return;\n                }\n                //\n                // const reflowKeys = Object.keys(diffed).filter(k => {\n                //     const lk = k.toLowerCase();\n                //     return !(lk.endsWith('color') || k.endsWith('style'));\n                // });\n                this._jflowInstance.setConfig(val);\n                // console.log('recalculateUp')\n                // this._jflowInstance.recalculateUp();\n                // console.log(reflowKeys.length, val)\n                // if(reflowKeys.length) {\n                //     this._jflowInstance._belongs.recalculateUp();\n                // }\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        render: function (createElement) {\n            return null;\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            this.bindListeners();\n            this.addToStack(this._jflowInstance, this.source);\n        },\n        // updated() {\n        //     console.log('recalculateUp')\n\n        // },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromStack(this._jflowInstance);\n        },\n        methods: {\n            bindListeners() {\n                Object.keys(this.$listeners).map(event => {\n                    const func = this.$listeners[event];\n                    this._jflowInstance.addEventListener(event, func);\n                })\n            }\n        }\n    }\n}","import * as JFlowInstance from '@joskii/jflow-core';\n/**\n * JFlow {@link BaseLink} 的 vue 封装 \n * @module jflow-link\n * @property {BaseLink~Configs} configs - 传给 BseLink 的配置, from, to属性会被替换为jflowid对应的 Instance\n * @property {String} from - source\n * @property {String} to - source\n */\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        inject: [ 'addToLinkStack', 'removeFromLinkStack', 'getJFlow' ],\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            from: Object,\n            to: Object,\n        },\n        // watch: {\n        //     from() {\n        //         this.resetLink();\n        //     },\n        //     to() {\n        //         this.resetLink();\n        //     },\n        //     configs(val, oldVal) {\n        //         this.setConfig(val);\n        //     },\n        // },\n        render: function (createElement) {\n            return null;\n        },\n        created() {\n            const jflow = this.getJFlow();\n            const fromInstance = jflow.getRenderNodeBySource(this.from);\n            const toInstance = jflow.getRenderNodeBySource(this.to);\n            this.createInstance(fromInstance, toInstance);\n        },\n        mounted() {\n            this.unwatch = this.$watch(() => [this.from, this.to, this.configs], () => {\n                this.refreshConfig();\n            })\n        },\n        methods: {\n            createInstance(fromInstance, toInstance) {\n                if(fromInstance && toInstance) {\n                    this._jflowInstance = new builder({\n                        ...this.configs,\n                        from: fromInstance,\n                        to: toInstance,\n                    });\n                    this.bindListeners();\n                    this.addToLinkStack(this._jflowInstance, this.from, this.to);   \n                }\n            },\n            refreshConfig() {\n                const jflow = this.getJFlow();\n                const fromInstance = jflow.getRenderNodeBySource(this.from);\n                const toInstance = jflow.getRenderNodeBySource(this.to);\n                if(!this._jflowInstance) {\n                    this.createInstance(fromInstance, toInstance);\n                } else {\n                    this._jflowInstance.setConfig({\n                        ...this.configs,\n                        from: fromInstance,\n                        to: toInstance,\n                    });\n                }\n                \n            },\n            // setConfig(val) {\n            //     const conf = {};\n            //     Object.keys(val).forEach(k => {\n            //         if(k !=='from' && k !== 'to'){\n            //             conf[k] = val[k];\n            //         }\n            //     })\n            //     this._jflowInstance.setConfig(conf);\n            // },\n            // resetLink() {\n            //     const jflow = this.getJFlow();\n            //     const fromInstance = jflow.getRenderNodeBySource(this.from);\n            //     const toInstance = jflow.getRenderNodeBySource(this.to);\n            //     this._jflowInstance.from = fromInstance;\n            //     this._jflowInstance.to = toInstance;\n            // },\n            bindListeners() {\n                Object.keys(this.$listeners).map(event => {\n                    const func = this.$listeners[event];\n                    this._jflowInstance.addEventListener(event, func);\n                })\n            }\n        },\n        destroyed() {\n            this.unwatch();\n            if(this._jflowInstance) {\n                this.removeFromLinkStack(this._jflowInstance, this.from, this.to);\n            }\n        }\n    }\n}","import * as JFlowInstance from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\nexport default function (nameNode) {\n    const builder =  typeof nameNode === 'string'\n        ? JFlowInstance[nameNode]\n        : nameNode;\n    return {\n        mixins: [StackMixin],\n        inject: {\n            addToBelongStack: {\n                from: 'addToStack',\n            },\n            removeFromBelongStack: {\n                from: 'removeFromStack',\n            },\n            renderJFlow: {\n                from: 'renderJFlow',\n            },\n        },\n        render: function (createElement) {\n            return createElement('jflow-group', this.$slots.default);\n        },\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                    return;\n                }\n                this._jflowInstance.setConfig(val);\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.addToBelongStack(this._jflowInstance, this.source);\n        },\n        mounted(){\n            this._jflowInstance.recalculate();\n        },\n        updated() {\n            this._jflowInstance.recalculateUp();\n        },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromBelongStack(this._jflowInstance);\n        },\n    }\n}","import { TextGroup } from '@joskii/jflow-core';\nimport StackMixin from './StackMixin';\n\nexport default {\n    mixins: [StackMixin],\n    inject: {\n        addToBelongStack: {\n            from: 'addToStack',\n        },\n        removeFromBelongStack: {\n            from: 'removeFromStack',\n        },\n        renderJFlow: {\n            from: 'renderJFlow',\n        },\n    },\n    data() {\n        return {\n            nodes: [],\n        }\n    },\n    props: {\n        configs: {\n            type: Object,\n            default: function () {\n                return {};\n            },\n        },\n        visible: {\n            type: Boolean,\n            default: true,\n        },\n        source: {\n            type: Object,\n        },\n        genVueComponentKey: {\n            type: Function,\n        }\n    },\n    watch: {\n        configs(val, oldVal) {\n            if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                return;\n            }\n            this._jflowInstance.setConfig(val);\n            // this._jflowInstance._jflow._render();\n        },\n        '$listeners' (val, oldVal) {\n            let news = [];\n            let deletes = [];\n            const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n            const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n            vnew.forEach((v) => {\n                const hnew = v.handler;\n                if(!vold.find((q) => q.handler === hnew)) {\n                    news.push(v);\n                }\n            });\n            vold.forEach((v) => {\n                const hold = v.handler;\n                if(!vnew.find((q) => q.handler === hold)) {\n                    deletes.push(v);\n                }\n            });\n\n            news.forEach((v) => {\n                this._jflowInstance.addEventListener(v.event, v.handler);\n            });\n            deletes.forEach((v) => {\n                this._jflowInstance.removeEventListener(v.event, v.handler);\n            });\n        },\n        visible(val) {\n            this._jflowInstance.visible = val;\n            // this._jflowInstance._belongs.recalculateUp();\n            // this._jflowInstance._jflow._render();\n        },\n        source(val) {\n            this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n        }\n    },\n    \n    created() {\n        this._jflowInstance = new TextGroup(this.configs);\n        this._jflowInstance.visible = this.visible;\n        Object.keys(this.$listeners).map(event => {\n            const func = this.$listeners[event].bind(this);\n            this._jflowInstance.addEventListener(event, func);\n        })\n        this.addToBelongStack(this._jflowInstance, this.source);\n        this.genTextElementMeta();\n    },\n    mounted(){\n        this._jflowInstance.recalculate();\n    },\n    updated() {\n        this._jflowInstance.recalculateUp();\n    },\n    destroyed() {\n        this._jflowInstance.destroy();\n        this.removeFromBelongStack(this._jflowInstance);\n    },\n    render: function (createElement) {\n        if(!this.nodes.length) { \n            return createElement('jflow-group', this.$slots.default);\n        } else {\n            const vnodes = this.nodes.map((textElement) => {\n                let { type, source } = textElement;\n                if(!this.$scopedSlots[type]) {\n                    if(this.$scopedSlots['jflowcommon']){\n                        type = 'jflowcommon';\n                    } else {\n                        return\n                    }\n                }\n                if(textElement.__vnode__) {\n                    return textElement.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ source, textElement });\n                if(this.genVueComponentKey) {\n                    vnode.key = this.genVueComponentKey(source);\n                }\n                \n                textElement.__vnode__ = vnode;\n                return vnode;\n            });\n            return createElement('div', vnodes);\n        }\n    },\n    methods: {\n        genTextElementMeta() {\n            this.nodes = this._jflowInstance._flattenTxtElem.filter(elem => elem.type !== 'text');\n        },\n        reflow() {\n            this._jflowInstance.refreshTextElements();\n            this.genTextElementMeta();\n            this.$nextTick(() => {\n                this._jflowInstance.refresh();\n            })\n        },\n    },\n}","// import JFlowComponent from './components/JFlow';\nimport JFlowComponent from './components/JFlow';\nimport JFlowInstance from './components/JFlowInstance';\nimport JFlowLink from './components/JFlowLink';\nimport JFlowGroup from './components/JFlowGroup';\nimport JFlowTextGroup from './components/JFlowTextGroup';\n\nconst JFLOW_NODES = [\n    /**\n     * JFlow {@link Point} 的 vue 封装 \n     * @module j-point\n     * @property {Point~PointConfigs} configs - 传给 Point 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Point',\n    /**\n     * JFlow {@link Rectangle} 的 vue 封装 \n     * @module j-rectangle\n     * @property {Rectangle~RectangleConfigs|GroupTemplate~GroupConfigs} configs - 传给 Rectangle 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Rectangle',\n    /**\n     * JFlow {@link Capsule} 的 vue 封装 \n     * @module j-capsule\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Capsule 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Capsule',\n    /**\n     * JFlow {@link Diamond} 的 vue 封装 \n     * @module j-diamond\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Diamond 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Diamond',\n    /**\n     * JFlow {@link Rhombus} 的 vue 封装 \n     * @module j-rhombus\n     * @property {(Rhombus~RhombusConfigs|GroupTemplate~GroupConfigs)} configs - 传给 Diamond 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Rhombus',\n    /**\n     * JFlow {@link Text} 的 vue 封装 \n     * @module j-text\n     * @property {Text~TextConfigs} configs - 传给 Text 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Text',\n    /**\n     * JFlow {@link Icon} 的 vue 封装 \n     * @module j-icon\n     * @property {Icon~IconConfigs} configs - 传给 Icon 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'Icon',\n\n    'ShadowDom',\n\n    'TextEditor',\n];\n/**\n * @typedef {BezierLink~Configs} j-bezier-link~Configs\n * @property {String} from   - 起始单元 jflowId\n * @property {String} to     - 终止单元 jflowId\n */\nconst JFLOW_LINKS = [\n    'Link',\n    'PolyLink',\n    \n    /**\n     * JFlow {@link BezierLink} 的 vue 封装 \n     * @module j-bezier-link\n     * @property {BezierLink~Configs} configs - 传给 BezierLink 的配置\n     */\n    'BezierLink'\n]\nconst JFLOW_GROUPS = [\n    /**\n     * JFlow {@link CapsuleGroup} 的 vue 封装 \n     * @module j-capsule-group\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 CapsuleGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'CapsuleGroup',\n    /**\n     * JFlow {@link CapsuleVerticalGroup} 的 vue 封装 \n     * @module j-capsule-vertical-group\n     * @property {(Capsule~CapsuleConfigs|GroupTemplate~GroupConfigs)} configs - 传给 CapsuleVerticalGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'CapsuleVerticalGroup',\n    /**\n     * JFlow {@link DiamondGroup} 的 vue 封装 \n     * @module j-diamond-group\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 DiamondGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'DiamondGroup',\n    /**\n     * JFlow {@link DiamondVerticalGroup} 的 vue 封装 \n     * @module j-diamond-vertical-group\n     * @property {(Diamond~DiamondConfigs|GroupTemplate~GroupConfigs)} configs - 传给 DiamondVerticalGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'DiamondVerticalGroup',\n    /**\n     * JFlow {@link RhombusGroup} 的 vue 封装 \n     * @module j-rhombus-group\n     * @property {(Rhombus~RhombusConfigs|GroupTemplate~GroupConfigs)} configs - 传给 RhombusGroup 的配置\n     * @property {Boolean} visible - 可见状态\n     * @property {String} jflowId - 全局唯一ID，用于连线单元\n     */\n    'RhombusGroup',\n\n    'PointGroup',\n\n    'ScrollGroup',\n]\n\nconst components = [\n    {\n        name: 'Jflow',\n        component: JFlowComponent,\n    },\n    {\n        /**\n         * JFlow {@link RectangleGroup} 的 vue 封装 \n         * @module j-group\n         * @property {RectangleGroup~RectangleGroupConfigs} configs - 传给 RectangleGroup 的配置\n         */\n        name: 'Group',\n        component: JFlowGroup('Group'),\n    }, \n    ...JFLOW_GROUPS.map(name => ({\n        name,\n        component: JFlowGroup(name)\n    })),\n    ...JFLOW_NODES.map(name => ({\n        name,\n        component: JFlowInstance(name)\n    })),\n    ...JFLOW_LINKS.map(name => ({\n        name,\n        component: JFlowLink(name)\n    })),\n    {\n        name: 'TextGroup',\n        component: JFlowTextGroup\n    }\n];\nconst componentPrefix = 'j';\ncustomElements.define('jflow-group', class extends HTMLElement {\n    constructor() {\n        super();\n        this.attachShadow({mode: 'open'});\n    }\n});\n/**\n * @module JFlowVuePlugin \n */\nexport const JFlowVuePlugin = {\n    /**\n     * 安装 JFlowVuePlugin\n     * @function\n     * @param {Vue} Vue - Vue\n     * @param {Object} options - Vue plugin 配置\n     * @param {string} options.prefix - 组件前缀，默认是 j\n     * @param {Object} options.custom - 自定义组件，形式为 { key: {@link:Instance} }\n     */\n    install: (Vue, options = {}) => {\n        let prefixToUse = componentPrefix;\n        if(options && options.prefix){\n            prefixToUse = options.prefix;\n        };\n        components.forEach(k => {\n            Vue.component(`${prefixToUse}${k.name}`, k.component);\n        });\n\n        if(options.customInstance) {\n            Object.keys(options.customInstance).forEach(name => {\n                Vue.component(`${prefixToUse}${name}`, JFlowInstance(options.customInstance[name]));\n            })\n        }\n        if(options.customGroups) {\n            Object.keys(options.customGroups).forEach(name => {\n                // console.log(`${prefixToUse}${name}` )\n                Vue.component(`${prefixToUse}${name}`, JFlowGroup(options.customGroups[name]));\n            })\n        }\n        if(options.customLink) {\n            Object.keys(options.customLink).forEach(name => {\n                // console.log(`${prefixToUse}${name}` )\n                Vue.component(`${prefixToUse}${name}`, JFlowLink(options.customLink[name]));\n            })\n        }\n    }\n}\n\n// export { * as JFlowInstance } from './components/JFlowInstance'; \nexport { default as JFlowLinkGroup } from './components/JFlowLinkGroup';\n","import StackMixin from './StackMixin';\nexport default function (builder) {\n    return {\n        mixins: [StackMixin],\n        inject: {\n            addToBelongStack: {\n                from: 'addToStack',\n            },\n            removeFromBelongStack: {\n                from: 'removeFromStack',\n            },\n            renderJFlow: {\n                from: 'renderJFlow',\n            },\n        },\n        render: function (createElement) {\n            const vlinks = this.renderLinks.map(meta => {\n                let type = meta.type || 'plainlink'\n                if(!this.$scopedSlots[type]) {\n                    return null;\n                }\n                if(meta.__vnode__) {\n                    return meta.__vnode__;\n                }\n                const [vnode] = this.$scopedSlots[type]({ configs: meta });\n                if(this.genVueComponentKey) {\n                    const k1 = this.genVueComponentKey(meta.from.source);\n                    const k2 = this.genVueComponentKey(meta.to.source);\n                    const k3 = meta.part;\n                    vnode.key = `${k1}-${k2}-${k3}`\n                }\n                meta.__vnode__ = vnode;\n                return vnode\n            })\n            return createElement('jflow-group', [...this.$slots.default, ...vlinks]);\n        },\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            source: {\n                type: Object,\n            }\n        },\n        data() {\n            return {\n                renderLinks: []\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                \n                if(JSON.stringify(val) === JSON.stringify(oldVal)){\n                    return;\n                }\n                this._jflowInstance.setConfig(val);\n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            },\n            source(val) {\n                this._jflowInstance._jflow.setRenderNodeBySource(val, this._jflowInstance);\n            }\n        },\n        created() {\n            this._jflowInstance =  new builder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            Object.keys(this.$listeners).map(event => {\n                const func = this.$listeners[event].bind(this);\n                this._jflowInstance.addEventListener(event, func);\n            })\n            this.addToBelongStack(this._jflowInstance, this.source);\n            this.genLinks();\n        },\n        mounted(){\n            this._jflowInstance.recalculate();\n        },\n        updated() {\n            this._jflowInstance.recalculateUp();\n        },\n        destroyed() {\n            this._jflowInstance.destroy();\n            this.removeFromBelongStack(this._jflowInstance);\n        },\n        methods: {\n            genLinks() {\n                this.renderLinks = this._jflowInstance._layout.flowLinkStack.slice();\n            },\n        }\n    }\n}"],"names":["StackMixin","provide","addToStack","this","removeFromStack","data","stack","methods","instance","source","_jflowInstance","_jflow","setRenderNodeBySource","onStackChangeHandler","recalculate","reflow","JFlowComponent","mixins","renderJFlow","getJFlow","getInstance","addToLinkStack","removeFromLinkStack","props","configs","type","Object","default","loading","Boolean","genVueComponentKey","Function","renderNodes","renderLinks","render","createElement","_this","length","vnodes","map","_ref","layoutNode","$scopedSlots","__vnode__","vnode","_slicedToArray","key","filter","n","vlinks","meta","k1","from","k2","to","k3","part","concat","_toConsumableArray","$slots","created","JFlow","$emit","genNodeLinkMeta","syncNodeLink","mounted","mountJFlow","beforeDestroy","_this$_jflowInstance","destroy","_this2","$mount","$el","keys","$listeners","event","func","bind","addEventListener","_this3","nodes","_layout","flowStack","source_Layout_Render_NodeMap","has","get","set","links","flowLinkStack","slice","preCallback","afterCallback","_this4","$nextTick","scheduleRender","_this5","__renderInSchedule__","_render","link","sourceFrom","sourceTo","addLinkNodeBySource","removeLinkNodeBySource","strict","diff","call","arguments","opts","subjects","c","keysLength","u","ref","equal","isStrictEqual","i","a","b","custom","JFlowInstance","nameNode","builder","inject","visible","watch","val","oldVal","diffed","setConfig","news","deletes","vnew","e","handler","vold","forEach","v","hnew","find","q","push","hold","removeEventListener","bindListeners","destroyed","JFlowLink","jflow","fromInstance","getRenderNodeBySource","toInstance","createInstance","unwatch","$watch","refreshConfig","_objectSpread","JFlowGroup","addToBelongStack","removeFromBelongStack","JSON","stringify","updated","recalculateUp","JFlowTextGroup","TextGroup","genTextElementMeta","textElement","_flattenTxtElem","elem","refreshTextElements","refresh","components","name","component","customElements","define","_HTMLElement","_inherits","_class","_super","_classCallCheck","attachShadow","mode","_wrapNativeSuper","HTMLElement","JFlowVuePlugin","install","Vue","options","undefined","prefixToUse","prefix","k","customInstance","customGroups","customLink","genLinks"],"mappings":"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"}